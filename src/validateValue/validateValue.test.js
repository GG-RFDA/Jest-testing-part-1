// При помощи require импортируем функцию validateValue и указываем относительный путь
const validateValue = require('./validateValue');
// Описываем первый тест, где вызываем функцию test и в качестве аргументов передаём название теста с колбэком
test('Валидация значения', () => {
    /*
     * Используем функцию expect, в которую передаём результат вычислений.
     * В expect передаём функцию validateValue.
     * В функцию validateValue передаём число 50.
     * Вызываем метод toBe для проверки значения.
     * Проверяем, что функция вернула true.
     */
    expect(validateValue(50)).toBe(true);
})
// Создаём "обёртку" для тестов и описываем несколько сценариев
describe('validateValue', () => {
    test('Корректное значение', () => {
        expect(validateValue(50)).toBe(true);
    })
    // Проверяем числа, выходящие за пределы допустимых значений
    test('Меньше корретного', () => {
        expect(validateValue(-1)).toBe(false);
    })
    test('Больше корретного', () => {
        expect(validateValue(101)).toBe(false);
    })
    // Проверяем числа, находящиеся на границах допустимых значений
    test('Пограничное значение снизу', () => {
        expect(validateValue(0)).toBe(true);
    })
    test('Пограничное значение сверху', () => {
        expect(validateValue(100)).toBe(true);
    })
    // Если ожидаемое значение не совпадает, то тест упадёт
})